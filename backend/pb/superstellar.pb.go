// Code generated by protoc-gen-go.
// source: superstellar.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	superstellar.proto

It has these top-level messages:
	IntVector
	Vector
	Spaceship
	Space
	UserInput
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_NONE  Direction = 0
	Direction_LEFT  Direction = 1
	Direction_RIGHT Direction = 2
)

var Direction_name = map[int32]string{
	0: "NONE",
	1: "LEFT",
	2: "RIGHT",
}
var Direction_value = map[string]int32{
	"NONE":  0,
	"LEFT":  1,
	"RIGHT": 2,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IntVector struct {
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *IntVector) Reset()                    { *m = IntVector{} }
func (m *IntVector) String() string            { return proto.CompactTextString(m) }
func (*IntVector) ProtoMessage()               {}
func (*IntVector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Vector struct {
	X float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
}

func (m *Vector) Reset()                    { *m = Vector{} }
func (m *Vector) String() string            { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()               {}
func (*Vector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Spaceship struct {
	Id          uint32     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Position    *IntVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Velocity    *Vector    `protobuf:"bytes,3,opt,name=velocity" json:"velocity,omitempty"`
	Facing      float32    `protobuf:"fixed32,4,opt,name=facing" json:"facing,omitempty"`
	InputThrust bool       `protobuf:"varint,5,opt,name=input_thrust,json=inputThrust" json:"input_thrust,omitempty"`
}

func (m *Spaceship) Reset()                    { *m = Spaceship{} }
func (m *Spaceship) String() string            { return proto.CompactTextString(m) }
func (*Spaceship) ProtoMessage()               {}
func (*Spaceship) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Spaceship) GetPosition() *IntVector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Spaceship) GetVelocity() *Vector {
	if m != nil {
		return m.Velocity
	}
	return nil
}

type Space struct {
	Spaceships []*Spaceship `protobuf:"bytes,1,rep,name=spaceships" json:"spaceships,omitempty"`
}

func (m *Space) Reset()                    { *m = Space{} }
func (m *Space) String() string            { return proto.CompactTextString(m) }
func (*Space) ProtoMessage()               {}
func (*Space) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Space) GetSpaceships() []*Spaceship {
	if m != nil {
		return m.Spaceships
	}
	return nil
}

type UserInput struct {
	Thrust    bool      `protobuf:"varint,1,opt,name=thrust" json:"thrust,omitempty"`
	Direction Direction `protobuf:"varint,2,opt,name=direction,enum=superstellar.Direction" json:"direction,omitempty"`
}

func (m *UserInput) Reset()                    { *m = UserInput{} }
func (m *UserInput) String() string            { return proto.CompactTextString(m) }
func (*UserInput) ProtoMessage()               {}
func (*UserInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*IntVector)(nil), "superstellar.IntVector")
	proto.RegisterType((*Vector)(nil), "superstellar.Vector")
	proto.RegisterType((*Spaceship)(nil), "superstellar.Spaceship")
	proto.RegisterType((*Space)(nil), "superstellar.Space")
	proto.RegisterType((*UserInput)(nil), "superstellar.UserInput")
	proto.RegisterEnum("superstellar.Direction", Direction_name, Direction_value)
}

func init() { proto.RegisterFile("superstellar.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x51, 0x4f, 0xc2, 0x30,
	0x14, 0x85, 0x6d, 0x61, 0x64, 0xbd, 0x20, 0x21, 0x37, 0x46, 0xf7, 0xa8, 0x8b, 0x89, 0x86, 0x07,
	0x62, 0x24, 0xc6, 0x57, 0x63, 0x44, 0x25, 0x31, 0x98, 0x54, 0xf4, 0x81, 0x17, 0x03, 0xa3, 0x4a,
	0x13, 0xb2, 0x36, 0x6d, 0x31, 0xf0, 0xe3, 0xfc, 0x6f, 0x6e, 0x95, 0x4d, 0xc0, 0xb7, 0x9e, 0xd3,
	0xef, 0xf4, 0x9e, 0xbb, 0x01, 0xda, 0x85, 0x16, 0xc6, 0x3a, 0x31, 0x9f, 0x8f, 0x4d, 0x47, 0x1b,
	0xe5, 0x14, 0x36, 0x36, 0xbd, 0xf8, 0x0c, 0x58, 0x3f, 0x75, 0x6f, 0x22, 0x71, 0xca, 0x60, 0x03,
	0xc8, 0x32, 0x22, 0xc7, 0xe4, 0x3c, 0xe0, 0x64, 0x99, 0xab, 0x55, 0x44, 0x7f, 0xd5, 0x2a, 0x3e,
	0x85, 0xda, 0x2e, 0x45, 0xb7, 0x28, 0x9a, 0x53, 0xdf, 0x04, 0xd8, 0x8b, 0x1e, 0x27, 0xc2, 0xce,
	0xa4, 0xc6, 0x26, 0x50, 0x39, 0xf5, 0xe8, 0x3e, 0xcf, 0x4e, 0xd8, 0x85, 0x50, 0x2b, 0x2b, 0x9d,
	0x54, 0xa9, 0x8f, 0xd4, 0x2f, 0x8f, 0x3a, 0x5b, 0x0d, 0xcb, 0x2a, 0xbc, 0x04, 0xf1, 0x02, 0xc2,
	0x2f, 0x31, 0x57, 0x89, 0x74, 0xab, 0xa8, 0xe2, 0x43, 0x07, 0xdb, 0xa1, 0x22, 0x51, 0x50, 0x78,
	0x08, 0xb5, 0x8f, 0x71, 0x22, 0xd3, 0xcf, 0xa8, 0xea, 0x7b, 0xad, 0x15, 0x9e, 0x40, 0x43, 0xa6,
	0x7a, 0xe1, 0xde, 0xdd, 0xcc, 0x2c, 0xac, 0x8b, 0x82, 0xec, 0x36, 0xe4, 0x75, 0xef, 0x0d, 0xbd,
	0x15, 0xdf, 0x40, 0xe0, 0xeb, 0xe3, 0x35, 0x80, 0x2d, 0xf6, 0xb0, 0xd9, 0x0a, 0x95, 0xff, 0x65,
	0xcb, 0x3d, 0xf9, 0x06, 0x1a, 0x8f, 0x80, 0xbd, 0x5a, 0x61, 0xfa, 0xf9, 0xa3, 0x79, 0x93, 0xf5,
	0x2c, 0xe2, 0x67, 0xad, 0x15, 0x5e, 0x01, 0x9b, 0x4a, 0x93, 0xf5, 0x2e, 0xbe, 0x44, 0x73, 0xf7,
	0xf1, 0xbb, 0xe2, 0x9a, 0xff, 0x91, 0xed, 0x36, 0xb0, 0xd2, 0xc7, 0x10, 0xaa, 0x83, 0xe7, 0x41,
	0xaf, 0xb5, 0x97, 0x9f, 0x9e, 0x7a, 0xf7, 0xc3, 0x16, 0x41, 0x06, 0x01, 0xef, 0x3f, 0x3c, 0x0e,
	0x5b, 0xf4, 0xb6, 0x3a, 0xa2, 0x7a, 0x32, 0xa9, 0xf9, 0x7f, 0xde, 0xfd, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x71, 0x42, 0x5e, 0xe2, 0x09, 0x02, 0x00, 0x00,
}
